- name: Setup Base
  hosts: all
  connection: local
  tasks:
    - name: the gang
      become: yes
      dnf:
        state: present
        name: "{{ item }}"
      loop:
          - htop
          - curl
          - xsel
          - xclip
          - "@Development tools"
          - tmux
          - zsh
          - ripgrep
          - fzf
          - fd-find
          - feh
          - i3
          - maim
          - python3
          - ninja-build

    - name: Check tmux plugin
      stat:
        path: "{{ ansible_env.HOME }}/.tmux/plugins/tpm"
      register: tpm
    - name: Install tmux plugin manager
      git:
        repo: git clone https://github.com/tmux-plugins/tpm 
        dest: "{{ ansible_env.HOME }}/.tmux/plugins/tpm"
      when: tpm.stat.exists == false

    - name: Changing Default Shell to ZSH
      become: yes
      user:
        name: "{{ ansible_user_id }}"
        shell: /bin/zsh

    - name: check if ohmyzsh
      stat:
        path: "~/.oh-my-zsh"
      register: ohmyzsh
    - block:
      - name: Download OhMyZsh
        get_url:
          url: https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh
          dest: "./ohmyzsh.sh"
          mode: 0755
      - name: Install ohmyzsh
        shell:
          cmd: "./ohmyzsh.sh -y"
      - name: Remove ohmyzsh installer
        file:
          path: ./ohmyzsh.sh
          state: absent
      when: ohmyzsh.stat.exists == false

    - name: check .local/bin
      stat:
        path: "~/.local/bin"
      register: localbin
    - name: create .local/bin
      file:
        path: "~/.local/bin"
        state: directory
      when: localbin.stat.exists == false

    - name: check powerlevel installed
      stat:
        path: "{{ ansible_env.HOME }}/.oh-my-zsh/custom/themes/powerlevel10k"
      register: powerlevel
    - name: get sweet themes
      git:
        repo: https://github.com/romkatv/powerlevel10k.git
        dest: "{{ ansible_env.HOME }}/.oh-my-zsh/custom/themes/powerlevel10k"
        depth: 1
      when: powerlevel.stat.exists == false

    - name: chekc if nvm exists
      become: yes
      become_user: root
      shell: "source {{ ansible_env.HOME }}/.nvm/nvm.sh && nvm -v"
      args:
        executable: /bin/zsh
      ignore_errors: true
      register: nvmstuff
    - block:
        - name: Download nvm
          get_url:
            url: https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.2/install.sh
            dest: "./nvm.sh"
        - name: install nvm
          command: bash ./nvm.sh
      when: nvmstuff.rc != 0

    - name: check if cargo exsits
      command: which cargo
      ignore_errors: true
      register: cargo
    - block:
        - name: download cargo
          become: yes
          get_url:
            url: https://sh.rustup.rs
            dest: "./cargo.sh"
        - name: Install cargo
          shell:
            cmd: "./cargo.sh -y"
        - name: Remove Cargo SH
          file:
            path: ./cargo.sh
            state: absent
      when: cargo.rc != 0

    - name: copy fonts
      command: "cp -r ./.fonts ~/"
    - name: copy bg
      command: cp -r ./bg ~/

    - name: Check if .config exists
      stat:
        path: ~/.config
      register: config
    - name: create .config
      file:
        path: ~/.config
        state: directory
      when: config.stat.exists == false

    - name: Check treesitter
      shell:
        cmd: which tree-sitter
      ignore_errors: true
      register: treesitter
    - name: Install treesitter
      command: cargo install tree-sitter-cli
      when: treesitter.rc != 0

- name: Install Picom
  import_playbook: picom.yml

- name: Setup nvim
  import_playbook: nvim.yml

- name: GoLang
  import_playbook: golang.yml

- name: Kitty
  import_playbook: kitty.yml

- name: Setup Dotfiles
  import_playbook: dotfiles.yml
